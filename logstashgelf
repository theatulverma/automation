input {gelf {type => "gelf"host => ["$HOSTNAME"]port => "12201"     }}filter {if [type] == "gelf" {multiline {            pattern => "^%{TIMESTAMP_ISO8601}"            negate => true            what => "previous"}grok {    match => { "message" => "\A%{TIMESTAMP_ISO8601:CREATED_AT}\s+%{LOGLEVEL:LOG_LEVEL}\s+%{DATA:LOG_MESSAGE}?\s*$(?<STACKTRACE>(?m:.*))?"}}if "_grokparsefailure" in [tags] {drop{}}date {   match => ["timestamp","yyyy-MM-dd HH:mm:ss,SSS Z", "MMM dd, yyyy HH:mm:ss a"]}}}output { if [type] == "gelf" {   elasticsearch {      hosts => ["localhost:7200"]      index => "docker-gelf-%{+YYYY.MM.dd}"      manage_template => false      document_type => "input_gelf"    }    if ([LOG_LEVEL] == "ERROR" or [LOG_LEVEL] == "WARN") and ("Exception" in [STACKTRACE] or "Error" in [STACKTRACE]){        hipchat {          room_id => "Docker-1.13"          token => "***"          host => "test.hipchat.com"          color => "random"          format => "%{CREATED_AT} %{LOG_LEVEL} %{LOG_MESSAGE}"        }        slack {          url => "https://hooks.slack.com/services/T43RMRDU5/B44E6876J/**"          channel => "docker-1v13"          username => "Autobot"          format => "%{CREATED_AT} %{LOG_LEVEL} %{LOG_MESSAGE}"        }    } 
